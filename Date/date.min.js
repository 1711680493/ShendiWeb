/**
 * 日期工具,引入此js则 Date类默认增加format函数用于格式化.
 * date v1.0.1 (https://1711680493.github.io)
 * changed in 2023-02-27
 * @author Shendi
 */
 try{Date.prototype.format=function(a){var c={"M+":this.getMonth()+1,"d+":this.getDate(),"H+":this.getHours(),"m+":this.getMinutes(),"s+":this.getSeconds(),"q+":Math.floor((this.getMonth()+3)/3),S:this.getMilliseconds()};if(/(y+)/.test(a)){a=a.replace(RegExp.$1,(this.getFullYear()+"").substr(4-RegExp.$1.length))}for(var b in c){if(new RegExp("("+b+")").test(a)){a=a.replace(RegExp.$1,(RegExp.$1.length==1)?(c[b]):(("00"+c[b]).substr((""+c[b]).length)))}}return a};Date.prototype.getWeek=function(){switch(this.getDay()){case 0:return"星期日";case 1:return"星期一";case 2:return"星期二";case 3:return"星期三";case 4:return"星期四";case 5:return"星期五";case 6:return"星期六"}}}catch(e){console.log("当前浏览器不支持 prototype")}var date={get:function(a){a=a.replace(/-/g,"/");return new Date(a)},before:function(j){if(!j instanceof Date){j=j.replace(/-/g,"/")}j=new Date(j).getTime();var f=1000*60;var g=f*60;var k=g*24;var m=k*15;var h=k*30;var b=new Date().getTime();var i=b-j;if(i<0){return}var d=i/h;var a=i/(7*k);var n=i/k;var l=i/g;var c=i/f;if(d>=1){return""+parseInt(d)+"个月前"}else{if(a>=1){return""+parseInt(a)+"周前"}else{if(n>=1){return""+parseInt(n)+"天前"}else{if(l>=1){return""+parseInt(l)+"小时前"}else{if(c>=1){return""+parseInt(c)+"分钟前"}else{return"刚刚"}}}}}}};